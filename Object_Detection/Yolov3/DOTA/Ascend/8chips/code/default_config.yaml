# Copyright 2021, 2022, 2023 LuoJiaNET Research and Development Group, Wuhan University
# Copyright 2021, 2022, 2023 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================

# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
# Url for modelarts
data_url: ""
train_url: ""
checkpoint_url: ""
# Path for local
data_path: "/cache/data"
output_path: "/cache/train"
load_path: "/cache/checkpoint_path"
device_target: "Ascend" # ['Ascend', 'GPU']
need_modelarts_dataset_unzip: True
modelarts_dataset_unzip_name: "coco2014"

# ==============================================================================
# Training options

# dataset related
data_dir: "/data02/tjy/DOTA-V1.5/"
per_batch_size: 64
use_modelarts: 1

# network related
pretrained_backbone: "/home/ma-user/modelarts/user-job-dir/yolov3_darknet53/backbone_darknet53.ckpt"
resume_yolov3: ""
run_eval: 0
eval_start_epoch: 1
save_best_ckpt: 1
eval_interval: 1


# optimizer and lr related
lr_scheduler: "exponential"
lr: 0.05
lr_epochs: "220,250"
lr_gamma: 0.1
eta_min: 0.0
T_max: 320
max_epoch: 320
warmup_epochs: 0
weight_decay: 0.0005
momentum: 0.9

# loss related
loss_scale: 1024
label_smooth: 0
label_smooth_factor: 0.1

# logging related
log_interval: 100
ckpt_path: "/data02/tjy/OUTPUT/yolov3_darknet/test4_dota/train/"
epochtime_path: "/data02/tjy/OUTPUT/yolov3_darknet/test4_dota/train/epochtime"
loss_path: "/data02/tjy/OUTPUT/yolov3_darknet/test4_dota/train/loss"
ckpt_interval: -1
ckpt_max_num: 280
is_save_on_master: 1

# distributed related
is_distributed: 1
rank: 0
group_size: 1
bind_cpu: True
device_num: 8

# profiler init
need_profiler: 0

# reset default config
training_shape: ""


# Eval option
pretrained: "/data02/tjy/OUTPUT/yolov3_darknet/test4_dota/train/2022-11-21_time_12_06_03/ckpt_0/yolov3_299_47.ckpt"
log_path: "/data02/tjy/OUTPUT/yolov3_darknet/test4_dota/train/"
nms_thresh: 0.5
annFile: ""
testing_shape: ""
eval_ignore_threshold: 0.001

# Infer options
infer_log: "/home/xx/Desktop/yolov3_darknet53/outputs/infer/val_test"

# Export option
device_id: 0
batch_size: 1
ckpt_file: ""
file_name: "yolov3_darknet53"
file_format: "MINDIR" # ["AIR", "ONNX", "MINDIR"]
keep_detect: True

# PostProcess option
result_path: ""
img_path: ""

# convert weight option
input_file: "./darknet53.conv.74"
output_file: "./backbone_darknet53.ckpt"

# Other default config
hue: 0.1
saturation: 1.5
value: 1.5
jitter: 0.3

resize_rate: 1
multi_scale: [[320, 320],
              [352, 352],
              [384, 384],
              [416, 416],
              [448, 448],
              [480, 480],
              [512, 512],
              [544, 544],
              [576, 576],
              [608, 608]
              ]

num_classes: 16
out_channel: 63 #3 * (num_classes + 5)
max_box: 240

labels: ['plane', 'baseball-diamond', 'bridge', 'ground-track-field',
          'small-vehicle', 'large-vehicle', 'ship', 'tennis-court',
          'basketball-court', 'storage-tank', 'soccer-ball-field',
          'roundabout', 'harbor', 'swimming-pool', 'helicopter','container-crane']

backbone_input_shape: [32, 64, 128, 256, 512]
backbone_shape: [64, 128, 256, 512, 1024]
backbone_layers: [1, 2, 8, 8, 4]

# confidence under ignore_threshold means no object when training
ignore_threshold: 0.1

# h->w
anchor_scales: [[10, 13],
                [16, 30],
                [33, 23],
                [30, 61],
                [62, 45],
                [59, 119],
                [116, 90],
                [156, 198],
                [373, 326]]

# test_param
test_img_shape: [640, 640]

---

# Help description for each configuration
data_dir: "Train dataset directory."
per_batch_size: "Batch size for Training."
pretrained_backbone: "The ckpt file of DarkNet53."
resume_yolov3: "The ckpt file of YOLOv3, which used to fine tune."

lr_scheduler: "Learning rate scheduler, options: exponential, cosine_annealing."
lr: "Learning rate."
lr_epochs: "Epoch of changing of lr changing, split with ',' ."
lr_gamma: "Decrease lr by a factor of exponential lr_scheduler."
eta_min: "Eta_min in cosine_annealing scheduler."
T_max: "T-max in cosine_annealing scheduler."
max_epoch: "Max epoch num to train the model."
warmup_epochs: "Warmup epochs."
weight_decay: "Weight decay factor."
momentum: "Momentum."
loss_scale: "Static loss scale."
label_smooth: "Whether to use label smooth in CE."
label_smooth_factor: "Smooth strength of original one-hot."
log_interval: "Logging interval steps."
ckpt_path: "Checkpoint save location."
ckpt_interval: "Save checkpoint interval."
is_save_on_master: "Save ckpt on master or all rank, 1 for master, 0 for all ranks."
is_distributed: "Distribute train or not, 1 for yes, 0 for no."
bind_cpu: "Whether bind cpu when distributed training."
device_num: "Device numbers per server"
rank: "Local rank of distributed."
group_size: "World size of device."
need_profiler: "Whether use profiler. 0 for no, 1 for yes."
training_shape: "Fix training shape."
resize_rate: "Resize rate for multi-scale training."

# eval option
pretrained: "model_path, local pretrained model to load."
log_path: "checkpoint save location."
nms_thresh: "threshold for NMS."
annFile: "path to annotation."
testing_shape: "shape for test."
eval_ignore_threshold: "threshold to throw low quality boxes for eval."

# export option
device_id: "Device id"
batch_size: "batch size"
ckpt_file: "Checkpoint file path."
file_name: "output file name."
file_format: "file format choices in ['AIR', 'ONNX', 'MINDIR']"
device_target: "device target. choices in ['Ascend', 'GPU'] for train. choices in ['Ascend', 'GPU', 'CPU'] for export."
keep_detect: "keep the detect module or not, default: True"

# convert weight option
input_file: "input file path."
output_file: "output file path."

---
lr_scheduler: ["exponential", "cosine_annealing"]